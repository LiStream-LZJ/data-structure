#include <stdio.h>
#include <stdlib.h>
#define OK 1
#define ERROR 0
#define OVERFLOW -2
#define MAXSIZE 100
#define ElemType int
typedef int QElemType;
typedef struct
{
	QElemType *base;
	int front;
	int rear;
}SqQueue;
int InitQueue(SqQueue &Q)
{
	Q.base = new QElemType[MAXSIZE];
	if (!Q.base) exit(OVERFLOW);
	Q.front = Q.rear = 0;
	return OK;
}
int Length(SqQueue &Q)
{
	printf("\n循环队列的长度为：%d\n", (Q.rear - Q.front + MAXSIZE) % MAXSIZE);
	return OK;
}
int EnQueue(SqQueue &Q)//认为MAXSIZS-1为满
{
	int n, i, x;
	if ((Q.rear + 1) % MAXSIZE == Q.front) return ERROR;
	printf("\n请输入入队个数：");
	scanf("%d", &n);
	if (n > (MAXSIZE - Length(Q))) printf("\n输出超限\n");
	else
	{
		for (i = 0; i < n; i++)
		{
			printf("\n请输入入队元素:");
			scanf("%d", &x);
			Q.base[Q.rear] = x;
			Q.rear = (Q.rear + 1) % MAXSIZE;
		}
		return OK;
	}
}
int DeQueue(SqQueue &Q)
{
	if (Q.front == Q.rear) return ERROR;
	printf("本次出队元素为:%d", Q.base[Q.front]);
	Q.front = (Q.front + 1) % MAXSIZE;
	return OK;
}
int GetHead(SqQueue &Q)
{
	if (Q.front != Q.rear)
		printf("\n栈顶元素为：%d", Q.base[Q.front]);
	return OK;
}
int main()
{
	SqQueue Q;
	InitQueue(Q);
	EnQueue(Q);
	DeQueue(Q);
	GetHead(Q);
	Length(Q);
	return 0;
}
