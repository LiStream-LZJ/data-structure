#include <stdio.h>
#include <stdlib.h>
#define MaxSize 20
typedef int datatype;
typedef struct list
{
	datatype data[MaxSize];
	int last;
}seqlist;
void shuru(seqlist *l)
{
	int n;
	int i;
	printf("\n请输入元素个数：");
	scanf("%d", &n);
	if (n - 1 <= MaxSize)
	{
		l->last = n;
		for (i = 0; i < n; i++)
		{
			printf("\n请输入第%d个元素：",i+1);
			scanf("%d", &l->data[i]);
		}
		printf("输入成功");
	}
}
int insert_seqlist(seqlist *l)
{
	int i,x;
	int j;
	printf("\n请输入插入位置：");
	scanf("%d", &i);
	if ((*l).last>MaxSize)
	{
		printf("\n溢出\n");
		return 0;
	}
	else if ((i<1) || (i>(*l).last + 1))
	{
		printf("\n位置有误\n");
		return 0;
	}
	else
	{
		printf("\n请输入元素数值:");
		scanf("%d", &x);
		for (j = (*l).last - 1; j >= i - 1; j--)
			(*l).data[j + 1] = (*l).data[j];
		(*l).data[i - 1] = x;
		(*l).last = (*l).last + 1;
		printf("\n插入成功\n");
		return 1;
	}
}

int search_seqlist(seqlist *l)
{
	int j;
	int x;
	printf("\n请输入查找的值:");
	scanf("%d", &x);
	for (j = 0; j<(*l).last - 1; j++)
	{
		if ((*l).data[j] == x)
			break;
	}
	if (j == l->last - 1) printf("\n查无此项");
	else printf("\n查找结果为第%d项", j+1);
	return 0;
}

int del_seqlist(seqlist *l)
{
	int j;
	int i;
	printf("\n请输入删除位置");
	scanf("%d", &i);
	if (i>MaxSize)
	{
		printf("超出线性表范围。\n");
		return 0;
	}
	else if (i<1 || i>(*l).last)
	{
		printf("该节点不存在。\n");
		return 0;
	}
	else
	{
		for (j = i - 1; j<(*l).last; j++)
			(*l).data[j] = (*l).data[j + 1];
		(*l).last--;
		return 1;
	}
}

void prf_seqlist(seqlist *l)
{
	int j;
	for (j = 1; j <= (*l).last; j++)
	{
		printf("%d  ", (*l).data[j - 1]);
		if (j % 4 == 0)
			printf("\n");
	}
	printf("\n");
}

int main()
{
	seqlist *l;
	l = new seqlist;
	(*l).last = 0;
	int n,m;
	m = 0;
	while (1)
	{
		printf("1 输入线性表\n");
		printf("2 插入元素\n");
		printf("3 删除元素\n");
		printf("4 查找元素\n");
		printf("5 输出线性表\n");
		printf("6 退出\n");
		printf("please input:");
		scanf("%d", &n);
		switch (n)
		{
		case 1:shuru(l); break;
		case 2:insert_seqlist(l); break;
		case 3:del_seqlist(l); break;
		case 4:search_seqlist(l); break;
		case 5:prf_seqlist(l); break;
		case 6:m = 1; break;
		default:printf("输入错误");break;
		}
		if (m == 1)break;
	}
	return 0;
}
