#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
struct node
{
    char word[20];
    int len=0;
}d[11111],f;
int n=0;
int aw[11111];
int check(node f)
{
    int i,j,ok,t,error;
    ok=0;i=1;j=1;
    for(t=0;t<n;t++)
    {
        error=0;
        if(f.len==d[t].len)
        {
            for(i=0;i<f.len;i++)
            {
                if(f.word[i]!=d[t].word[i])
                {
                    error++;
                    if(error>1) break;
                }
            }
            if(error==0) return 1;
        }
        else if(f.len==d[t].len-1)
        {
            for(i=0,j=0;j<(f.len+1);i++,j++)
            {
                if(f.word[i]!=d[t].word[j])
                {
                    i--;
                    error++;
                    if(error>1) break;
                }
            }
        }else if(f.len==d[t].len+1)
        {
            for(i=0,j=0;i<f.len;i++,j++)
            {
                if(f.word[i]!=d[t].word[j])
                {
                    j--;
                    error++;
                    if(error>1) break;
                }
            }
        }
        if(error==1) aw[ok++]=t;
    }
    printf("%s:",f.word);
    for(i=0;i<ok;i++)
    {
        printf(" %s",d[aw[i]].word);
    }
    printf("\n");
    return 0;
}
int main()
{
    while(scanf("%s",d[n].word)!=EOF){

        if(d[n].word[0]=='#') break;
        d[n].len=strlen(d[n].word);
        n++;
    }
    while(scanf("%s",f.word)!=EOF){
        if(f.word[0]=='#') break;
        f.len=strlen(f.word);
        if(check(f)==1) printf("%s is correct\n",f.word);
    }
    return 0;
}
