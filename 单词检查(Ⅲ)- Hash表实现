way one
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
using namespace std;
typedef struct  node
{
    char word[16];
    int len=0;
    struct node *next;
}Node,*TNode;
int aw[500000];
void into(int l,char di[],TNode &T)
{
    int i;
    if(T==NULL)
    {
        T=new Node;
        T->len=l;
        for(i=0;i<l;i++)
            T->word[i]=di[i];
        T->next=NULL;
    }
    else into(l,di,T->next);
}
int check(TNode T,int l,char f[])
{
    int i,error;
    i=1;
    for(;T!=NULL;T=T->next)
    {
        error=0;
        if(T->len==l)
        {
            for(i=0;i<l;i++)
            {
                if(f[i]!=T->word[i])
                {
                    error++;
                    if(error>1) break;
                }
            }
            if(error==0) return 1;
        }
    }
    return 0;
}
void checks(TNode T,int l,char f[])
{
    int i,j,error,ii;
    i=1;j=1;
    for(;T!=NULL;T=T->next)
    {
        error=0;
        if(T->len==l)
        {
            for(i=0;i<l;i++)
            {
                if(f[i]!=T->word[i])
                {
                    error++;
                    if(error>1) break;
                }
            }
        }
        else if(l==T->len-1)
            {
                for(i=0,j=0;j<(l+1);i++,j++)
                {
                    if(f[i]!=T->word[j])
                    {
                        i--;
                        error++;
                        if(error>1) break;
                    }
                }
            }else if(l==T->len+1)
            {
                for(i=0,j=0;i<l;i++,j++)
                {
                    if(f[i]!=T->word[j])
                    {
                        j--;
                        error++;
                        if(error>1) break;
                    }
                }
            }
            if(error==1)
            {
                printf(" ");
                for(ii=0;ii<T->len;ii++)
                {
                    printf("%c",T->word[ii]);
                }
            }
    }
}
int main()
{
    TNode T[16];
    char di[16];
    int l,i;
    for(i=0;i<=15;i++)
        T[i]=NULL;
    while(scanf("%s",di)!=EOF)
    {
        if(di[0]=='#') break;
        else
        {
            l=strlen(di);
            into(l,di,T[l]);
            if(l-1!=0) into(l,di,T[l-1]);
            if(l+1!=16) into(l,di,T[l+1]);
        }
    }
    while(scanf("%s",di)!=EOF)
    {
        if(di[0]=='#') break;
        else
        {
            l=strlen(di);
            if(check(T[l],l,di)==1)
                printf("%s is correct\n",di);
                else{
                    printf("%s:",di);
                    checks(T[l],l,di);
                    printf("\n");
                }
        }
    }
    return 0;
}





way two
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
using namespace std;
struct node
{
    char word[16];
    int len=0;
}d[16][500000];
int j[16];
int aw[500000];
void into(int l,char di[],int x)
{
    int i;
    if(x==0) x=l;
    else if(x==1) x=l-1;
    else if(x==2) x=l+1;
    for(;;)
    {
        if(d[x][j[x]].len==0)
        {
            d[x][j[x]].len=l;
            for(i=0;i<l;i++)
                d[x][j[x]].word[i]=di[i];
                j[x]++;
            break;
        }
    }
}
int check(int l,char f[])
{
    int i,ii,ok,t,error,iii;
    ok=0;i=1;ii=1;
    for(t=0;t<j[l];t++)
    {
        error=0;
        if(l==d[l][t].len)
        {
            for(i=0;i<l;i++)
            {
                if(f[i]!=d[l][t].word[i])
                {
                    error++;
                    if(error>1) break;
                }
            }
            if(error==0) return 1;
        }
        else if(l==d[l][t].len-1)
        {
            for(i=0,ii=0;ii<(l+1);i++,ii++)
            {
                if(f[i]!=d[l][t].word[ii])
                {
                    i--;
                    error++;
                    if(error>1) break;
                }
            }
        }else if(l==d[l][t].len+1)
        {
            for(i=0,ii=0;i<l;i++,ii++)
            {
                if(f[i]!=d[l][t].word[ii])
                {
                    ii--;
                    error++;
                    if(error>1) break;
                }
            }
        }
        if(error==1) aw[ok++]=t;
    }
    printf("%s:",f);
    for(i=0;i<ok;i++)
    {
        printf(" ");
        for(iii=0;iii<d[l][aw[i]].len;iii++)
        printf("%c",d[l][aw[i]].word[iii]);
    }
    printf("\n");
    return 0;
}
int main()
{
    char di[16];
    int l,i;
    for(i=1;i<16;i++)
        j[i]=0;
    while(scanf("%s",di)!=EOF)
    {
        if(di[0]=='#') break;
        else
        {
            l=strlen(di);
            into(l,di,0);
            if(l-1!=0) into(l,di,1);
            if(l+1!=16) into(l,di,2);
        }
    }
    while(scanf("%s",di)!=EOF)
    {
        if(di[0]=='#') break;
        else
        {
            l=strlen(di);
            if(check(l,di)==1)
                printf("%s is correct\n",di);
        }
    }
    return 0;
}

